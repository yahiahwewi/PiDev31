security:
    enable_authenticator_manager: true

    # Password Hashers Configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User Providers Configuration
    providers:
        # In-memory user provider (for testing/development)
        users_in_memory:
            memory: ~

        # Database-backed user provider (uncomment and adjust for your needs)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Firewalls Configuration
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
        
            form_login:
                login_path: login
                check_path: login
                default_target_path: dashboard # Redirect after successful login
                # default_target_path: app_security # Redirect after successful login

            # Lazy authentication initiation only when necessary
            lazy: true

            # Choose an appropriate user provider based on your configuration
            provider: app_user_provider
            # provider: users_in_memory

            # Custom authenticator for handling login logic
            custom_authenticator:
                - App\Security\LoginAuthenticator
                # - App\Security\AdminAuthAuthenticator
                # - App\Security\AdminAuthenticator
                # - App\Security\AdminAuthenticator


            # Specify the entry point for the firewall
            entry_point: App\Security\LoginAuthenticator

            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

    access_control:

        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/edit-details/\d+, roles: ROLE_USER }
        - { path: ^/edit-password/\d+, roles: ROLE_USER }
        - { path: ^/edit-password/\d+, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }




        # - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

    # access_control:
    #     - { path: '^/login$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: '^/dashboard', roles: ROLE_USER }  # Adjust this based on your routes
    #     - { path: '^/', roles: IS_AUTHENTICATED_FULLY }

    # Access Control Configuration (Uncomment and modify as needed)
    # access_control:
    #     - { path: ^/main, roles: ROLE_USER }
    #     - { path: ^/admin, roles: ROLE_ADMIN }
    #     - { path: ^/profile, roles: ROLE_USER }

# Configuration for the "test" environment
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 15        # Lowest possible value for bcrypt
                time_cost: 3    # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
